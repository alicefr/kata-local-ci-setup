#!/bin/bash 

function help {
	echo "Create local CI environment for kata container: virt-build-kata "
	echo "	-h: print help"
	echo "	-d <distro>: (ubuntu,centos,fedora)"
	echo "	-k <ssh_key_file>"
}


while getopts hk:d: flag
do
    case "${flag}" in
        d) d=${OPTARG};;
        k) key=${OPTARG};;
        h) help
	   exit 0
	 ;;
    esac
done

distro_commands=""
rh_distro_commands=( --selinux-relabel
		--edit '/etc/selinux/config:s/SELINUX=enforcing/SELINUX=permissive/'
		--firstboot-command 'systemctl stop firewalld'
		--firstboot-command 'systemctl disable firewalld')
case "$d" in
	ubuntu)
		distro=ubuntu-18.04
		distro_commands=( --firstboot-command 'usermod -a -G sudo kata'
		--update 
		--firstboot-command 'dhclient' 
		--firstboot-command 'systemctl enable serial-getty@ttyS0' 
		--firstboot-command 'systemctl start serial-getty@ttyS0')
		osvariant=ubuntu18.04
		;;
	centos)
		distro=centos-8.2
		osvariant=centos8
		distro_commands=("${rh_distro_commands[@]}")
		;;
	fedora)
		distro=fedora-32
		osvariant=fedora32
		distro_commands=("${rh_distro_commands[@]}")
		;;
	*)
		help
		echo "Distro $1 not recognized"
        	exit 1
esac

SSH_KEY_FILE=$key
SSH_KEY=$(cat $SSH_KEY_FILE)
set -ex

virt-builder $distro -o kata.qcow2 --format qcow2 --size=50G \
	--root-password password:kata \
	"${distro_commands[@]}" \
	--mkdir /home/kata \
	--delete /.autorelabel \
	--ssh-inject "root:file:$SSH_KEY_FILE" \
	--install "git,rsync,curl,make" \
	--firstboot-command 'useradd -m  kata -s /bin/bash' \
	--firstboot-command 'echo "kata ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/kata' \
	--firstboot-command "echo 'export PATH=\$PATH:/usr/local/go/bin' >> /home/kata/.bashrc" \
	--firstboot-command 'mkdir -p /home/kata/.ssh' \
	--firstboot-command "echo $SSH_KEY > /home/kata/.ssh/authorized_keys"  \
	--firstboot-command 'chown kata:kata -R /home/kata' \
	--password  'kata:password:kata' \
	--hostname kata-$distro

sudo virt-install --import --name kata  --ram 8192 --vcpus 4 \
        --disk path=kata.qcow2,format=qcow2 --graphics vnc,listen=0.0.0.0 \
        --os-type=$osvariant --network network=default
